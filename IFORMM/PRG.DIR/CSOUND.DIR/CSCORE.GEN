\  Stochastic Placement of Events
\  Produces Score for Csound 


variable #events      10 #events ! 
variable total       6 100 *  total  !     \ in centiseconds (in 1/10 of a sec)
variable maxfreq    8000 maxfreq !    \ in Hz.  Gaussian distribution      
variable minfreq       50 minfreq !    \ 
variable devfreq     1000 devfreq !    \ deviation of mean (~1/3 of range)
variable maxdb       9000 maxdb !      \ in centidb (1/10 of a db)
variable mindb        3000 mindb !     

variable panStart     100 panStart !
variable panEnd       100 panEnd !                    


\ ------------------------------------------------------------------------------

variable duration    
variable attack
variable release
variable start
variable db
variable alldb

\ ------------------------------------------------------------------------------
\ ------------ integer to floating point display converters --------------------

: ns.
 (.) type
;

: F.
  100 /mod 
  ns. 
  46 emit 
  dup 10 < if 48 emit ns. space else ns. space then
  
;

\ -----------------------positive Gauss-----------------------------------------
variable bigg 0 bigg !
variable xx   0 xx !
: grnd2   
   0 
   12 0 
   do    1200 irnd + 
   loop  
   7200 - 
   * 
   1200 / 
   abs
\ ------------------------- graphic output ------------------   
\   dup bigg @ > if dup bigg ! then  
\   xx @ swap 1 !pix
\   1 xx +!
; 

: display-grnd2 ( # -- )
 \  erase-screen
  0 bigg !
  0 xx !  
    640 0 ?do
     dup grnd2 
  loop
   drop
   20 0 at bigg @ .
;
\ ---------------------------------
\ ------------------------------------------------------------------------------



\ ----------------------envelope (attack&release)-------------------------------

: make2parts ( -- )  \  make a random length and split it into 2 parts 

  1 total @ rndbetween dup irnd dup release ! - attack ! 
;   

: rnd-envelope ( -- )
  make2parts
  attack @ release @  + duration ! 
;

\ ----------------------starttime-----------------------------------------------

: rnd-start ( -- )
 0 total @ rndbetween start !      \  start
;  

\ ------------------------adjust so they all end at the end---------------------

variable adjust-ratio
: fit-in-timeframe  ( -- )
  start @ duration @ + total @ > 
if 
  total @ start @ - duration ! 
  duration @ dup irnd dup release ! - attack !
then

;   

\ ----------------------------frequencies---------------------------------------

variable freq
: rnd-freq
   devfreq @ grnd abs minfreq @ +   
   maxfreq @ min
   freq !
;

\ ----------------------- decibels ---------------------------------------------

: rnd-db
mindb @ maxdb @ rndbetween db !   	\  amp 0-32000 (90dB) 8000(70 db) 
;
\ ------------------------decibel factors---------------------------------------

: factors
." ; all possible dbs: " #events @ 9000 * F.
cr
." ; all actual   dbs: "  alldb @ F.
cr
." ; Optimized Dividing Factor for Amp: " 
#events @ 9000 * 100 *   alldb @ /
\ #events @ *
F.

  

;

\ ---------------------------cscore---------------------------------------------

: cscore

 
   0 alldb !
  9 tabstops !

." ;  "  #events @ . ." #events total " total @ F. ." seconds" 
cr    

." ;  minfreq "  minfreq @ . ." Hz - maxfreq " maxfreq @ . ." Hz"     

."    devfreq: "  devfreq @ . ." Hz "     

cr

." ;  mindb "  mindb @  F. ." dB - maxdb " maxdb @ F. ." dB" cr    
cr

." f1  0  2048  10  1" 
cr
." ;  Osc   start    dur      amp      freq    attack    rel      panS     panE" 
cr
#events @  0 ?do

rnd-envelope
rnd-start
fit-in-timeframe          
rnd-db
rnd-freq

." i1  "                        \  use the same Sound Oscillator  
1 .tab
start @   F.   			\  starttime
1 .tab
duration @  F.   		\  duration     
1 .tab
db @ 
dup alldb +!
            F.     	        \  amp 0-32000 (90dB) 8000(70 db) 
1 .tab
freq @ .                        \  frequency (Hz) 
1 .tab
attack @    F.   		\  attack
1 .tab
release @   F.			\  release
1 .tab
panStart @  irnd F.
1 .tab
panEnd @  irnd F.

\ ." ; "
\ duration @ start @ + F. 

cr

loop

." e"

cr

factors
 
;


