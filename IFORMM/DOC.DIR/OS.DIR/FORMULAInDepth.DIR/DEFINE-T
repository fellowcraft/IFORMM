
\ ************ D E F I N I N G   F U N C T I O N S   O F   T I M E ************

\ So far we have shown how to play notes with differnt pitches and durations.
\ We turn now to the control of volume, tempo and articulation. Each of these
\ parameters can be thought of as a function of time. Instead defining of
\ function in the usual way (by taking a time argument and returning a value)
\ they use "procedural concentration". In this style of definition, a function
\ is generated by a process. The process invokes a series of "primitives"
\ (procedures representing a function defined on an interval) and thereby
\ defines a function that is the concentration of the primitives. The process
\ may take parametars, and may execute arbitrary code between invocations of
\ primitives.

\ As an example of procedural concentration, supose:


\ 	oseg      (y1 y2 dt --- ; )


\ is a primitive representing a linear function varying from y1 to y2 over a
\ time span dt.

\ The following function could then be defined:


\	: sawtooth      ( n --- ; sawtooth with n skewed teeth )
\	   0 do
\		0 3 10 oseg
\		3 0 5 oseg
\	     loop
\	;


\ The word "sawtooth" invoked at time zero with argument 2 defines the function
\ resambleing the sawtooth. 

\ Note, for example, that "sawtooth" has no explicit time parametar, and in
\ fact doesn't explicitly compute the function valu at any particular time.
\ This makes concentration at any level trivial; for example "sawtooth" may
\ be called from another function definition.

\ To understand this, look at DYNAMICS file.

\ *****************************************************************************


